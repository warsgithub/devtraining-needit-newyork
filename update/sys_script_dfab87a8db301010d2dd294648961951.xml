<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt Debugging Practice</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    //current.short_description = "This text set by the Debugging Business Rules business rule.";
    //var myNum = current.state;
/*
    // The function in this try/catch is not defined
    try {
        thisFunctionDoesNotExist();
    } catch (err) {
        gs.error("NeedIt App: a JavaScript runtime error occurred - " + err);
    }

    // This function is not defined and is not part of a try/catch
    thisFunctionAlsoDoesNotExist();
*/
    // getNum and setNum demonstrate JavaScript Closure
    var x = 7;

    function numFunc() {
        var x = 10;
        return {
            getNum: function() {
                return x;
            },
            setNum: function(newNum) {
                x = newNum;
            }
        };
    }
    var callFunc = numFunc();
    var val1 = callFunc.getNum();
	gs.info('callFunc value 1: ' + val1);
    var val2 = callFunc.setNum(2);
	gs.info('callFunc value 2: ' + val2);
    var val3 = callFunc.getNum();
	gs.info('callFunc value 3: ' + val3);

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-05-12 18:04:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dfab87a8db301010d2dd294648961951</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>NeedIt Debugging Practice</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_dfab87a8db301010d2dd294648961951</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-13 22:38:50</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=dfab87a8db301010d2dd294648961951"/>
</record_update>
